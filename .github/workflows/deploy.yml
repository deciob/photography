name: Deploy to GitHub Pages

on:
  # Deploy on push to main (without images for quick code updates)
  push:
    branches: [main]
  # Deploy on release (with images)
  release:
    types: [published]
  # Manual trigger
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout your repository using git
        uses: actions/checkout@v4

      - name: Download gallery images (if release triggered)
        if: github.event_name == 'release'
        run: |
          echo "Release triggered deployment - downloading images"
          gh release download ${{ github.event.release.tag_name }} \
            --pattern "images.zip" --dir ./temp

          # Extract images to public folder
          unzip -q ./temp/images.zip -d ./public/
          echo "Images from release ${{ github.event.release.tag_name }} extracted"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Download latest gallery images (if push/manual trigger)
        if: github.event_name != 'release'
        run: |
          # Get the latest release with images
          LATEST_RELEASE=$(gh release list --limit 1 --json tagName --jq '.[0].tagName')

          if [ "$LATEST_RELEASE" != "null" ] && [ -n "$LATEST_RELEASE" ]; then
            echo "Getting images from latest release: $LATEST_RELEASE"
            
            # Check if release has images.zip
            if gh release view $LATEST_RELEASE --json assets --jq '.assets[].name' | grep -q "images.zip"; then
              gh release download $LATEST_RELEASE --pattern "images.zip" --dir ./temp
              unzip -q ./temp/images.zip -d ./public/
              echo "Images from $LATEST_RELEASE extracted"
            else
              echo "No images found in latest release"
            fi
          else
            echo "No releases found - proceeding without gallery images"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install, build, and upload your site
        uses: withastro/action@v3

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
